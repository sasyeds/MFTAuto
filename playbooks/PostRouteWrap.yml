---
 - set_fact:
      accountname: "{{ accountname }}"
      st_api_url: "https://{{ hostname }}:8444/api/v1.4"
      
 - set_fact:
      src_routes_json: "accounts/{{ accountname }}/routes/{{ comp_route_name }}/{{ comp_route_name }}.json"

 - set_fact:
      route_version_file: "{{ lookup('file' , '{{ src_routes_json }}') | from_json }}"

 - debug: msg="src_routes_json {{ src_routes_json }}"
 - debug: msg="route_version_file {{ route_version_file }}"
 
 - include_tasks: Add_Subs_Id.yml
   with_indexed_items: "{{ route_version_file.completeroute.subscriptions }}"
   loop_control:
           loop_var: sub_add_item
   when: route_version_file.completeroute.subscriptions is defined
   
 - set_fact:
      dictcreate: {}

 - set_fact:
      dictcreate: "{{ route_version_file.completeroute.route | combine(dict1) }}"
   when: route_version_file.completeroute.subscriptions is defined
   
 - debug: msg="dictcreate {{ dictcreate }}"
   when: route_version_file.completeroute.subscriptions is defined

 - name: Create Composite Routes
   uri:
      url: "{{ st_api_url }}/routes"
      method: POST
      body: "{{ dictcreate }}"
      body_format: json
      user: admin
      password: admin
      force_basic_auth: yes
      validate_certs: no
      return_content: yes
      status_code: '201'
   register: json_resp_comp_route_sub
   when: comp_oper == "create" and route_version_file.completeroute.subscriptions is defined
   
 - name: Create Composite Routes
   uri:
      url: "{{ st_api_url }}/routes"
      method: POST
      body: "{{ route_version_file.completeroute.route }}"
      body_format: json
      user: admin
      password: admin
      force_basic_auth: yes
      validate_certs: no
      return_content: yes
      status_code: '201'
   register: json_resp_comp_route
   when: comp_oper == "create" and route_version_file.completeroute.subscriptions is not defined
   
 - set_fact:
      compositeid: "{{ json_resp_comp_route_sub.json.id }}"
   when: comp_oper == "create" and route_version_file.completeroute.subscriptions is defined
   
 - set_fact:
      compositeid: "{{ json_resp_comp_route.json.id }}"
   when: comp_oper == "create" and route_version_file.completeroute.subscriptions is not defined
   
 - debug: msg="compositeid {{ compositeid }}"
   when: comp_oper == "create"

 - set_fact:
      compid: "{{ compositeid }}"
   when: comp_oper == "create"

 - debug: msg="completesimpleroute {{ route_version_file.completeroute.completesimpleroute }}"

 - include_tasks: PostRouteWrap_Inc1.yml
   with_items: 
           -   "{{ route_version_file.completeroute.completesimpleroute }}"
   loop_control:
           loop_var: simple_item
   when: comp_oper == "create"

 - name: Get Composite Route Id.
   uri:
     url: "{{ st_api_url }}/routes?account={{ accountname }}&name={{ comp_route_name }}"
     method: GET
     body: "{{ accountname }}"
     body_format: json
     user: admin
     password: admin
     force_basic_auth: yes
     validate_certs: no
     return_content: yes
     status_code: '200,201'
   register: json_get_route_id
   when: comp_oper == "update"

 - debug: msg="json_get_route_id {{ json_get_route_id }}"
   when: comp_oper == "update"

 - name: Update Composite Routes
   uri:
      url: "{{ st_api_url }}/routes/{{ json_get_route_id.json.routes[0].id }}"
      method: POST
      body: "{{ dictcreate }}"
      body_format: json
      user: admin
      password: admin
      force_basic_auth: yes
      validate_certs: no
      return_content: yes
      status_code: '204'
   register: json_resp_upd_comp_route_sub
   when: comp_oper == "update" and route_version_file.completeroute.subscriptions is defined
  
 - name: Update Composite Routes
   uri:
      url: "{{ st_api_url }}/routes/{{ json_get_route_id.json.routes[0].id }}"
      method: POST
      body: "{{ route_version_file.completeroute.route }}"
      body_format: json
      user: admin
      password: admin
      force_basic_auth: yes
      validate_certs: no
      return_content: yes
      status_code: '204'
   register: json_resp_upd_comp_route
   when: comp_oper == "update" and route_version_file.completeroute.subscriptions is not defined

 - include_tasks: PostRouteWrap_Inc2.yml
   with_items:
           -   "{{ route_version_file.completeroute.completesimpleroute }}"
   loop_control:
           loop_var: simple_item_create_update
   when: comp_oper == "update" and simp_oper == "create"

